CREATE TABLE NoteDatabase (
     id INTEGER PRIMARY KEY AUTOINCREMENT,
     title TEXT NOT NULL,
     description TEXT NOT NULL,
     created INTEGER NOT NULL,
     deleteCreated INTEGER NOT NULL,
     favorite INTEGER DEFAULT 0 CHECK (favorite IN (0, 1)),
     trash INTEGER DEFAULT 0 CHECK (trash IN (0, 1))
);

CREATE TABLE Tag (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);

CREATE TABLE Folder (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL
);

CREATE TABLE NoteTag (
    noteId INTEGER NOT NULL,
    tagId INTEGER NOT NULL,
    PRIMARY KEY (noteId, tagId),
    FOREIGN KEY (noteId) REFERENCES NoteDatabase(id) ON DELETE CASCADE,
    FOREIGN KEY (tagId) REFERENCES Tag(id) ON DELETE CASCADE
);

CREATE TABLE NoteFolder (
    noteId INTEGER NOT NULL,
    folderId INTEGER NOT NULL,
    PRIMARY KEY (noteId, folderId),
    FOREIGN KEY (noteId) REFERENCES NoteDatabase(id) ON DELETE CASCADE,
    FOREIGN KEY (folderId) REFERENCES Folder(id) ON DELETE CASCADE
);


getAllNote:
SELECT *
FROM NoteDatabase;

getNoteById:
SELECT *
FROM NoteDatabase
WHERE id = ?;

updateNote:
UPDATE NoteDatabase
SET title = ?, description = ?, created =?, favorite =?, trash =?,deleteCreated =?
WHERE id = ?;

insertNote:
INSERT INTO NoteDatabase(title,description, created,deleteCreated)
VALUES (?,?,?,?);

deleteNoteById:
DELETE FROM NoteDatabase
WHERE id =?;

deleteAllNoteDeleted:
DELETE FROM NoteDatabase
WHERE trash = 1;

deleteNoteDeleteById:
DELETE FROM NoteDatabase
WHERE id = ? AND trash = 1;

deleteAllNote:
DELETE FROM NoteDatabase;

getAllTags:
SELECT *
FROM Tag;

getAllFolders:
SELECT *
FROM Folder;

getTagsAssociatedWithASpecificNote:
SELECT Tag.*
FROM Tag
JOIN NoteTag ON Tag.id = NoteTag.tagId
-- WHERE NoteTag.noteId = ?;
WHERE NoteTag.noteId = :noteId;

getFoldersAssociatedWithASpecificNote:
SELECT Folder.*
FROM Folder
JOIN NoteFolder ON Folder.id = NoteFolder.folderId
-- WHERE NoteFolder.noteId = ?;
WHERE NoteFolder.noteId = :noteId;

insertANewTag:
INSERT INTO Tag(name)
VALUES (?);

insertANewFolder:
INSERT INTO Folder(name)
VALUES (?);

associateATagWithASpecificNote:
INSERT INTO NoteTag(noteId, tagId)
VALUES (?, ?);

associateAFolderWithASpecificNote:
INSERT INTO NoteFolder(noteId, folderId)
VALUES (?, ?);

removeTagAssociationFromANote:
DELETE FROM NoteTag
WHERE noteId = ? AND tagId = ?;

removeFolderAssociationFromANote:
DELETE FROM NoteFolder
WHERE noteId = ? AND folderId = ?;


